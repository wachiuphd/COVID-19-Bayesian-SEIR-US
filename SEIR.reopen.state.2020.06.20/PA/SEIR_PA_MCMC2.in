MCMC ("simMCMC.out","",  # name of output and restart file
      "",                     # name of data file
      200000,0,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      34330995.834277);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, Uniform, 61, 106); # Time of 50% of final testing rate (between March 1 and April 15)
  Distrib(GM_TauTesting, TruncNormal, 7, 3, 1, 14); # Time constant for testing (1 to 14 days)
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.409, 0.242, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 17.3, 1.67, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 4.72, 1.26, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 4); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 37.4, 16.8, 21, 90);
  Distrib(GM_rMax, TruncNormal, 0.433, 0.163, 0, 2);
  Distrib(GM_TauR, TruncNormal, 47.4, 14.6, 14, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # PA 

      Npop = 12801989 ;
      StartTime(60);

      Print(N_pos
      Data(N_pos, 52 83 103 108 165 207 276 560 531 533 643 693 756 962 1211 1404 1597 1493 1470 1579 1680 1989 1751 1676 1178 1366 1146 1145 1245 1706 1628 1215 948 1296 1156 1369 1599 1397 1116 885 1214 1102 1397 1208 1334 962 825 865 888 1070 1323 1078 1295 543 837 707 938 986 989 623 822 610 0 1726 866 725 730 473 451 780 625 1297 692 515 352 612 512 538 445 701 506 351 493 410 467 66 463 336 323 362 335 418 526 504 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 );
      Print(p_N_pos
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 );
      Data(D_pos, 0 0 1 0 4 1 4 5 6 12 4 11 14 11 16 12 34 14 12 78 69 29 78 78 13 17 60 63 60 49 80 276 92 360 58 71 45 13 47 119 479 97 62 64 26 14 554 94 310 200 72 19 24 75 137 275 124 61 15 87 119 0 245 115 112 28 15 13 113 108 91 73 18 12 100 74 76 69 45 12 10 61 48 51 49 49 4 28 33 43 42 38 20 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 );
      PrintStep( S , 60,  298 , 1);
      PrintStep( S_C , 60,  298 , 1);
      PrintStep( E , 60,  298 , 1);
      PrintStep( E_C , 60,  298 , 1);
      PrintStep( I_U , 60,  298 , 1);
      PrintStep( I_C , 60,  298 , 1);
      PrintStep( I_T , 60,  298 , 1);
      PrintStep( A_U , 60,  298 , 1);
      PrintStep( A_C , 60,  298 , 1);
      PrintStep( R_U , 60,  298 , 1);
      PrintStep( R_T , 60,  298 , 1);
      PrintStep( F_T , 60,  298 , 1);
      PrintStep( CumInfected , 60,  298 , 1);
      PrintStep( CumPosTest , 60,  298 , 1);
      PrintStep( CumDeath , 60,  298 , 1);
      PrintStep( dtCumInfected , 60,  298 , 1);
      PrintStep( dtCumPosTest , 60,  298 , 1);
      PrintStep( dtCumDeath , 60,  298 , 1);
      PrintStep( Tot , 60,  298 , 1);
      PrintStep( ThetaFit , 60,  298 , 1);
      PrintStep( HygieneFit , 60,  298 , 1);
      PrintStep( c , 60,  298 , 1);
      PrintStep( beta , 60,  298 , 1);
      PrintStep( rho , 60,  298 , 1);
      PrintStep( lambda , 60,  298 , 1);
      PrintStep( delta , 60,  298 , 1);
      PrintStep( Rt , 60,  298 , 1);
      PrintStep( Refft , 60,  298 , 1);

    }
  }
}
