MCMC ("simMCMC.out","",  # name of output and restart file
      "",                     # name of data file
      200000,0,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      3910.70471666875);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_TStartTesting, TruncNormal, 90, 30, 60, 150); # Time of start of testing
  Distrib(GM_TauTesting, TruncNormal, 7, 3, 1, 14); # Time constant for testing
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_TestingCoverage, TruncNormal, 0.5, 0.2, 0.2, 0.8);
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.331, 0.226, 0.000821, 0.735); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 17.8, 1.88, 14.6, 19.6); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 3.96, 0.649, 2.85, 4.72); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 2); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 36.6, 18.7, 25.7, 82.2);
  Distrib(GM_rMax, TruncNormal, 0.309, 0.148, 0.0817, 0.521);
  Distrib(GM_TauR, TruncNormal, 48.1, 16.2, 9.16, 58.9);
  
  Distrib(alpha_Pos, LogUniform, 4, 40);
  Distrib(alpha_Death, LogUniform, 8, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # NY 

      Npop = 19453561 ;
      StartTime(60);

      Print(N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 );
      Data(N_pos, 1770 2950 3254 4812 5707 4790 5146 6447 7377 7683 7195 6984 9298 7917 8669 10482 10841 8327 8658 8174 10453 10621 10575 9946 8236 6337 7177 11571 8505 7358 7090 6054 4726 4178 5526 6244 8130 10553 5902 3951 3110 4585 4681 3942 4663 3438 2538 2239 2786 3671 2758 2715 2273 1660 1430 2176 2390 2762 2419 1889 1250 1474 1525 2088 1696 1772 1589 1249 1072 1129 1768 1551 1376 1110 941 1329 1045 1048 1075 1108 781 702 683 674 736 822 916 694 620 631 567 618 796 716 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 );
      Print(p_N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 );
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 );
      Data(D_pos, 0 23 9 70 0 96 75 100 134 209 237 253 332 391 432 562 630 594 599 731 779 799 777 783 758 671 778 752 606 630 540 507 478 481 474 438 422 437 367 337 335 377 306 289 299 280 226 230 232 951 217 226 207 162 205 168 157 134 174 141 110 114 133 107 112 87 109 97 76 79 79 58 68 57 54 64 56 54 42 37 47 40 49 56 38 53 32 24 28 29 21 32 25 24 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 );
      PrintStep( S , 60,  274 , 1);
      PrintStep( S_C , 60,  274 , 1);
      PrintStep( E , 60,  274 , 1);
      PrintStep( E_C , 60,  274 , 1);
      PrintStep( I_U , 60,  274 , 1);
      PrintStep( I_C , 60,  274 , 1);
      PrintStep( I_T , 60,  274 , 1);
      PrintStep( R_U , 60,  274 , 1);
      PrintStep( R_T , 60,  274 , 1);
      PrintStep( F_T , 60,  274 , 1);
      PrintStep( CumInfected , 60,  274 , 1);
      PrintStep( CumPosTest , 60,  274 , 1);
      PrintStep( CumDeath , 60,  274 , 1);
      PrintStep( dtCumInfected , 60,  274 , 1);
      PrintStep( dtCumPosTest , 60,  274 , 1);
      PrintStep( dtCumDeath , 60,  274 , 1);
      PrintStep( Tot , 60,  274 , 1);
      PrintStep( ThetaFit , 60,  274 , 1);
      PrintStep( HygieneFit , 60,  274 , 1);
      PrintStep( c , 60,  274 , 1);
      PrintStep( beta , 60,  274 , 1);
      PrintStep( rho , 60,  274 , 1);
      PrintStep( lambda , 60,  274 , 1);
      PrintStep( delta , 60,  274 , 1);
      PrintStep( Rt , 60,  274 , 1);
      PrintStep( Refft , 60,  274 , 1);

    }
  }
}
