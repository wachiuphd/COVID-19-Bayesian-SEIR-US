MCMC ("simMCMC.out","SEIR_MA_MCMC2.out",  # name of output and restart file
      "",                     # name of data file
      200000,1,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      10101010);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, Uniform, 61, 106); # Time of 50% of final testing rate (between March 1 and April 15)
  Distrib(GM_TauTesting, TruncNormal, 7, 3, 1, 14); # Time constant for testing (1 to 14 days)
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.358, 0.229, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 16.9, 1.54, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 3.93, 0.609, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 4); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 40.4, 17.6, 21, 90);
  Distrib(GM_rMax, TruncNormal, 0.335, 0.134, 0, 2);
  Distrib(GM_TauR, TruncNormal, 43.2, 16, 14, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # MA 

      Npop = 6892503 ;
      StartTime(60);

      Print(N_pos
      Data(N_pos, 73 85 112 121 131 382 679 579 833 1007 698 797 868 1118 1228 1436 1334 765 1337 1365 1588 2151 2035 1888 2615 1413 1315 1861 2522 2633 2402 2293 1596 1752 1745 3079 2977 2379 1590 1524 1840 1963 1940 2106 1952 1824 1000 1184 1754 1696 1612 1410 1050 669 870 1165 1685 1239 1512 1077 1042 873 1045 1114 805 773 1013 596 422 527 675 617 789 664 3840 358 429 471 494 575 304 190 263 267 511 392 336 208 87 195 266 271 228 286 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 );
      Print(p_N_pos
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 );
      Data(D_pos, 1 2 2 4 6 9 7 9 15 15 27 25 29 34 42 36 39 66 78 67 100 110 107 114 110 155 118 173 165 155 161 163 157 146 148 172 108 0 22 104 150 252 157 154 130 158 86 122 208 132 150 138 139 129 33 174 167 110 113 92 65 76 128 82 80 76 68 44 57 74 93 78 50 78 189 50 67 49 34 54 27 37 55 46 38 46 38 48 23 18 69 36 30 28 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 );
      PrintStep( S , 60,  298 , 1);
      PrintStep( S_C , 60,  298 , 1);
      PrintStep( E , 60,  298 , 1);
      PrintStep( E_C , 60,  298 , 1);
      PrintStep( I_U , 60,  298 , 1);
      PrintStep( I_C , 60,  298 , 1);
      PrintStep( I_T , 60,  298 , 1);
      PrintStep( A_U , 60,  298 , 1);
      PrintStep( A_C , 60,  298 , 1);
      PrintStep( R_U , 60,  298 , 1);
      PrintStep( R_T , 60,  298 , 1);
      PrintStep( F_T , 60,  298 , 1);
      PrintStep( CumInfected , 60,  298 , 1);
      PrintStep( CumPosTest , 60,  298 , 1);
      PrintStep( CumDeath , 60,  298 , 1);
      PrintStep( dtCumInfected , 60,  298 , 1);
      PrintStep( dtCumPosTest , 60,  298 , 1);
      PrintStep( dtCumDeath , 60,  298 , 1);
      PrintStep( Tot , 60,  298 , 1);
      PrintStep( ThetaFit , 60,  298 , 1);
      PrintStep( HygieneFit , 60,  298 , 1);
      PrintStep( c , 60,  298 , 1);
      PrintStep( beta , 60,  298 , 1);
      PrintStep( rho , 60,  298 , 1);
      PrintStep( lambda , 60,  298 , 1);
      PrintStep( delta , 60,  298 , 1);
      PrintStep( Rt , 60,  298 , 1);
      PrintStep( Refft , 60,  298 , 1);

    }
  }
}
