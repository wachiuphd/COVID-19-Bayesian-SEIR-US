MCMC ("simMCMC.out","SEIR_CA_MCMC3.out",  # name of output and restart file
      "",                     # name of data file
      200000,1,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      10101010);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, TruncNormal, 120, 60, 60, 180); # Time of 50% of final testing rate
  Distrib(GM_TauTesting, TruncNormal, 21, 14, 1, 42); # Time constant for testing
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.388, 0.271, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 17.3, 1.14, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 3.85, 0.73, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 4); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 29.5, 24.1, 21, 90);
  Distrib(GM_rMax, TruncNormal, 0.354, 0.105, 0, 2);
  Distrib(GM_TauR, TruncNormal, 53.2, 18.7, 14, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # CA 

      Npop = 39512223 ;
      StartTime(60);

      Print(N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      Data(N_pos, 313 139 216 257 197 369 253 651 873 764 1065 739 1035 673 1036 1510 1325 1412 898 1529 1092 1352 1163 1143 1179 554 990 1086 1758 1346 1435 1370 645 2283 2135 1973 1885 1883 1027 1300 1567 1469 2417 1525 1755 1419 1321 1275 2603 1799 1898 2049 2119 1259 1443 1759 2023 1772 1857 2046 1591 1365 2262 2140 2247 2187 2079 1848 2175 2247 2717 2189 2992 3705 2423 2304 2377 2120 3094 3115 2796 2507 2170 2702 3090 2702 3660 3212 2597 2108 3455 4084 4317 3893 4515 4230 5019 7149 5349 4890 5972 4810 8009 9480 7407 6408 5688 9153 8597 5699 6090 11694 7031 7798 8047 8460 8358 7346 11126 8544 9986 9199 9329 6846 9231 12807 -1 -1 -1 );
      Print(p_N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      Data(D_pos, 5 2 4 3 0 13 13 12 13 23 22 10 20 18 32 34 39 43 24 31 68 50 49 68 42 36 71 63 69 95 87 94 42 60 86 115 93 89 59 45 54 78 95 91 98 44 39 63 95 92 81 93 67 25 77 87 98 76 96 57 41 32 102 106 88 78 66 21 19 70 89 95 88 57 38 35 75 61 63 74 67 27 44 79 105 62 46 74 26 32 87 82 70 64 71 20 65 52 101 79 60 33 31 44 110 73 100 50 18 6 111 114 149 140 94 72 23 47 140 118 130 120 90 9 61 115 -1 -1 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      PrintStep( S , 60,  297 , 1);
      PrintStep( S_C , 60,  297 , 1);
      PrintStep( E , 60,  297 , 1);
      PrintStep( E_C , 60,  297 , 1);
      PrintStep( I_U , 60,  297 , 1);
      PrintStep( I_C , 60,  297 , 1);
      PrintStep( I_T , 60,  297 , 1);
      PrintStep( A_U , 60,  297 , 1);
      PrintStep( A_C , 60,  297 , 1);
      PrintStep( R_U , 60,  297 , 1);
      PrintStep( R_T , 60,  297 , 1);
      PrintStep( F_T , 60,  297 , 1);
      PrintStep( CumInfected , 60,  297 , 1);
      PrintStep( CumPosTest , 60,  297 , 1);
      PrintStep( CumDeath , 60,  297 , 1);
      PrintStep( dtCumInfected , 60,  297 , 1);
      PrintStep( dtCumPosTest , 60,  297 , 1);
      PrintStep( dtCumDeath , 60,  297 , 1);
      PrintStep( Tot , 60,  297 , 1);
      PrintStep( ThetaFit , 60,  297 , 1);
      PrintStep( HygieneFit , 60,  297 , 1);
      PrintStep( c , 60,  297 , 1);
      PrintStep( beta , 60,  297 , 1);
      PrintStep( rho , 60,  297 , 1);
      PrintStep( lambda , 60,  297 , 1);
      PrintStep( delta , 60,  297 , 1);
      PrintStep( Rt , 60,  297 , 1);
      PrintStep( Refft , 60,  297 , 1);

    }
  }
}
