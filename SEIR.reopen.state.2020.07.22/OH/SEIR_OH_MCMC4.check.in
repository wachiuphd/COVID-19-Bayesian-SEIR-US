MCMC ("simMCMC.out","SEIR_OH_MCMC4.out",  # name of output and restart file
      "",                     # name of data file
      200000,1,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      10101010);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, Uniform, 61, 106); # Time of 50% of final testing rate (between March 1 and April 15)
  Distrib(GM_TauTesting, TruncNormal, 7, 3, 1, 14); # Time constant for testing (1 to 14 days)
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.468, 0.258, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 17.5, 1.83, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 4.57, 1.56, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 4); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 33.4, 10.1, 21, 90);
  Distrib(GM_rMax, TruncNormal, 0.642, 0.207, 0, 2);
  Distrib(GM_TauR, TruncNormal, 48.5, 10.3, 14, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # OH 

      Npop = 11689100 ;
      StartTime(60);

      Print(N_pos
      Data(N_pos, 31 50 78 104 91 122 140 163 270 269 247 280 266 348 355 410 427 304 407 332 366 364 366 372 354 371 305 511 623 693 1115 1380 1317 806 392 577 475 418 376 362 444 534 724 716 592 579 560 495 607 555 885 681 384 696 473 471 636 597 520 449 531 498 484 731 627 614 503 566 529 433 476 651 468 479 471 366 442 490 476 353 365 361 325 413 429 420 424 300 428 434 412 700 609 531 546 729 590 632 892 987 817 854 737 743 1076 1301 1091 926 968 805 948 1277 1150 1525 1358 1378 1261 1142 1316 1290 1679 1542 1110 1236 1047 1527 -1 -1 -1 -1 );
      Print(p_N_pos
      Print(D_pos
      Data(D_pos, 0 1 2 0 3 2 2 5 4 6 4 10 16 10 16 10 11 17 23 25 26 20 18 16 6 21 50 37 28 29 33 20 38 48 53 46 34 21 17 25 46 138 38 27 19 17 18 79 90 46 35 25 10 16 79 47 51 47 29 15 32 63 61 55 36 84 13 18 15 42 54 33 18 6 51 52 41 40 16 15 7 27 17 36 33 18 46 3 16 24 14 22 34 30 3 4 31 20 17 16 16 3 11 45 13 27 0 4 4 16 43 21 15 26 4 22 6 5 6 28 9 20 42 15 30 16 -1 -1 -1 -1 );
      Print(p_D_pos
      PrintStep( S , 60,  298 , 1);
      PrintStep( S_C , 60,  298 , 1);
      PrintStep( E , 60,  298 , 1);
      PrintStep( E_C , 60,  298 , 1);
      PrintStep( I_U , 60,  298 , 1);
      PrintStep( I_C , 60,  298 , 1);
      PrintStep( I_T , 60,  298 , 1);
      PrintStep( A_U , 60,  298 , 1);
      PrintStep( A_C , 60,  298 , 1);
      PrintStep( R_U , 60,  298 , 1);
      PrintStep( R_T , 60,  298 , 1);
      PrintStep( F_T , 60,  298 , 1);
      PrintStep( CumInfected , 60,  298 , 1);
      PrintStep( CumPosTest , 60,  298 , 1);
      PrintStep( CumDeath , 60,  298 , 1);
      PrintStep( dtCumInfected , 60,  298 , 1);
      PrintStep( dtCumPosTest , 60,  298 , 1);
      PrintStep( dtCumDeath , 60,  298 , 1);
      PrintStep( Tot , 60,  298 , 1);
      PrintStep( ThetaFit , 60,  298 , 1);
      PrintStep( HygieneFit , 60,  298 , 1);
      PrintStep( c , 60,  298 , 1);
      PrintStep( beta , 60,  298 , 1);
      PrintStep( rho , 60,  298 , 1);
      PrintStep( lambda , 60,  298 , 1);
      PrintStep( delta , 60,  298 , 1);
      PrintStep( Rt , 60,  298 , 1);
      PrintStep( Refft , 60,  298 , 1);

    }
  }
}
