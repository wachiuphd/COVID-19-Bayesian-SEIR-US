MCMC ("simMCMC.out","SEIR_GA_MCMC1.out",  # name of output and restart file
      "",                     # name of data file
      200000,1,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      10101010);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, TruncNormal, 120, 60, 60, 180); # Time of 50% of final testing rate
  Distrib(GM_TauTesting, TruncNormal, 21, 14, 1, 42); # Time constant for testing
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.464, 0.251, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 18.7, 2.16, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 4.5, 1.39, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 2); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 28.5, 9.35, 0, 90);
  Distrib(GM_rMax, TruncNormal, 0.516, 0.205, 0, 2);
  Distrib(GM_TauR, TruncNormal, 47.7, 16.5, 0, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # GA 

      Npop = 10617423 ;
      StartTime(60);

      Print(N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      Data(N_pos, 90 133 87 93 172 254 221 278 476 365 285 158 1120 709 710 483 329 487 667 1504 1083 665 917 676 293 863 908 764 682 1525 475 632 646 934 859 772 635 548 706 512 702 1008 532 1115 1036 296 766 343 985 743 667 426 909 486 708 697 526 823 466 554 380 640 926 758 813 914 706 506 386 691 649 600 616 700 632 589 687 953 774 688 589 599 752 731 993 810 1018 880 733 664 952 882 1097 1800 892 1227 1750 1703 1714 1900 1990 2225 2207 1874 2946 3472 2784 2826 2197 1548 3406 3420 2837 4484 3190 2525 3643 3394 3871 3441 3908 4689 3251 2452 3413 3314 -1 );
      Print(p_N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      Data(D_pos, 9 3 1 9 2 7 8 8 16 5 11 7 24 28 24 21 17 10 18 100 33 17 37 12 5 31 37 51 35 63 23 14 46 66 37 36 20 12 8 59 55 67 27 34 20 3 45 66 23 25 41 23 5 36 20 44 22 30 35 14 36 22 23 67 31 26 13 6 41 36 55 12 29 39 32 28 21 24 27 0 6 28 77 44 46 43 28 5 43 35 46 30 31 6 1 5 40 10 47 25 6 2 6 21 22 22 7 1 3 18 21 23 8 35 31 5 25 28 37 13 28 36 5 3 78 81 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      PrintStep( S , 60,  295 , 1);
      PrintStep( S_C , 60,  295 , 1);
      PrintStep( E , 60,  295 , 1);
      PrintStep( E_C , 60,  295 , 1);
      PrintStep( I_U , 60,  295 , 1);
      PrintStep( I_C , 60,  295 , 1);
      PrintStep( I_T , 60,  295 , 1);
      PrintStep( R_U , 60,  295 , 1);
      PrintStep( R_T , 60,  295 , 1);
      PrintStep( F_T , 60,  295 , 1);
      PrintStep( CumInfected , 60,  295 , 1);
      PrintStep( CumPosTest , 60,  295 , 1);
      PrintStep( CumDeath , 60,  295 , 1);
      PrintStep( dtCumInfected , 60,  295 , 1);
      PrintStep( dtCumPosTest , 60,  295 , 1);
      PrintStep( dtCumDeath , 60,  295 , 1);
      PrintStep( Tot , 60,  295 , 1);
      PrintStep( ThetaFit , 60,  295 , 1);
      PrintStep( HygieneFit , 60,  295 , 1);
      PrintStep( c , 60,  295 , 1);
      PrintStep( beta , 60,  295 , 1);
      PrintStep( rho , 60,  295 , 1);
      PrintStep( lambda , 60,  295 , 1);
      PrintStep( delta , 60,  295 , 1);
      PrintStep( Rt , 60,  295 , 1);
      PrintStep( Refft , 60,  295 , 1);

    }
  }
}
