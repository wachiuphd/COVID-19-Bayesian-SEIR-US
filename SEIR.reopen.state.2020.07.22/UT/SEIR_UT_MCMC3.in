MCMC ("simMCMC.out","",  # name of output and restart file
      "",                     # name of data file
      200000,0,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      3910.70471666875);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, TruncNormal, 120, 60, 60, 180); # Time of 50% of final testing rate
  Distrib(GM_TauTesting, TruncNormal, 21, 14, 1, 42); # Time constant for testing
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.473, 0.246, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 17.8, 1.02, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 4.3, 1.08, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 4); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 30.2, 6.82, 21, 90);
  Distrib(GM_rMax, TruncNormal, 0.532, 0.191, 0, 2);
  Distrib(GM_TauR, TruncNormal, 43.6, 14.3, 14, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # UT 

      Npop = 3205958 ;
      StartTime(60);

      Print(N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 );
      Data(N_pos, 15 34 24 45 76 42 47 56 78 122 117 87 81 125 62 172 182 177 70 63 108 130 126 104 97 60 49 130 141 122 126 138 144 83 149 167 170 166 175 110 110 152 177 156 153 194 142 132 146 129 195 184 148 111 70 188 129 164 155 170 146 134 192 164 183 203 132 129 99 86 215 343 269 264 202 203 295 316 439 546 268 256 237 305 388 325 404 332 295 329 407 495 586 643 394 444 394 484 590 676 578 472 564 553 499 554 596 676 410 517 564 722 601 867 632 629 546 448 413 954 727 760 785 409 486 566 -1 -1 );
      Print(p_N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 );
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 );
      Data(D_pos, 0 0 0 1 0 0 0 0 1 0 0 2 1 2 0 0 1 0 5 0 0 0 4 1 0 0 1 1 1 2 2 2 1 4 2 1 4 2 0 0 4 0 1 0 3 1 0 6 2 3 0 5 1 1 5 2 0 2 1 2 0 8 2 2 1 4 0 1 3 4 1 1 5 1 0 0 4 0 3 1 0 3 3 1 3 8 0 0 4 2 4 3 3 0 3 0 5 0 1 2 1 0 1 4 1 3 5 0 3 6 4 7 4 2 5 3 1 10 7 1 1 8 0 4 4 9 -1 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 );
      PrintStep( S , 60,  296 , 1);
      PrintStep( S_C , 60,  296 , 1);
      PrintStep( E , 60,  296 , 1);
      PrintStep( E_C , 60,  296 , 1);
      PrintStep( I_U , 60,  296 , 1);
      PrintStep( I_C , 60,  296 , 1);
      PrintStep( I_T , 60,  296 , 1);
      PrintStep( R_U , 60,  296 , 1);
      PrintStep( R_T , 60,  296 , 1);
      PrintStep( F_T , 60,  296 , 1);
      PrintStep( CumInfected , 60,  296 , 1);
      PrintStep( CumPosTest , 60,  296 , 1);
      PrintStep( CumDeath , 60,  296 , 1);
      PrintStep( dtCumInfected , 60,  296 , 1);
      PrintStep( dtCumPosTest , 60,  296 , 1);
      PrintStep( dtCumDeath , 60,  296 , 1);
      PrintStep( Tot , 60,  296 , 1);
      PrintStep( ThetaFit , 60,  296 , 1);
      PrintStep( HygieneFit , 60,  296 , 1);
      PrintStep( c , 60,  296 , 1);
      PrintStep( beta , 60,  296 , 1);
      PrintStep( rho , 60,  296 , 1);
      PrintStep( lambda , 60,  296 , 1);
      PrintStep( delta , 60,  296 , 1);
      PrintStep( Rt , 60,  296 , 1);
      PrintStep( Refft , 60,  296 , 1);

    }
  }
}
