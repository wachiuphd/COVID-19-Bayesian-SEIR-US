MCMC ("simMCMC.out","",  # name of output and restart file
      "",                     # name of data file
      200000,0,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      1143.91475588553);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, TruncNormal, 120, 60, 60, 180); # Time of 50% of final testing rate
  Distrib(GM_TauTesting, TruncNormal, 21, 14, 1, 42); # Time constant for testing
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.473, 0.253, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 18.6, 2.15, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 4.24, 1.27, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 4); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 31.4, 11.8, 21, 90);
  Distrib(GM_rMax, TruncNormal, 0.514, 0.193, 0, 2);
  Distrib(GM_TauR, TruncNormal, 49.8, 9.67, 14, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # NC 

      Npop = 10488084 ;
      StartTime(60);

      Print(N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      Data(N_pos, 34 40 47 71 42 101 106 132 127 172 105 267 191 86 273 236 309 183 285 351 205 225 257 404 208 296 208 99 342 394 281 353 271 187 269 388 444 571 207 312 426 380 561 414 586 155 184 408 502 639 471 492 404 281 301 470 691 622 853 530 511 677 422 738 758 1107 497 742 176 488 784 1076 1185 916 674 626 888 1189 1289 1370 921 938 676 1011 1310 1768 1427 1443 983 751 1002 1333 1652 1549 1412 804 848 1721 1009 1635 1719 1605 1342 1186 1843 1629 2099 1413 1329 1546 1346 1435 2039 1982 2462 1908 1827 1956 1782 2160 2051 2481 1820 1268 1815 2140 -1 -1 -1 );
      Print(p_N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      Data(D_pos, 0 0 0 0 0 0 1 1 1 1 0 2 2 2 6 3 5 7 2 13 7 12 9 6 1 5 22 9 14 21 12 8 7 34 29 11 16 20 10 7 36 12 24 21 21 2 8 22 25 30 20 17 3 3 27 20 18 26 11 7 2 30 11 14 12 9 7 10 12 28 33 32 18 9 12 23 18 21 6 26 4 10 23 24 11 28 12 5 9 36 14 7 22 15 8 3 28 15 18 19 9 10 3 18 30 18 1 3 1 2 22 21 20 18 20 4 7 42 16 20 18 23 5 8 26 30 -1 -1 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 );
      PrintStep( S , 60,  297 , 1);
      PrintStep( S_C , 60,  297 , 1);
      PrintStep( E , 60,  297 , 1);
      PrintStep( E_C , 60,  297 , 1);
      PrintStep( I_U , 60,  297 , 1);
      PrintStep( I_C , 60,  297 , 1);
      PrintStep( I_T , 60,  297 , 1);
      PrintStep( A_U , 60,  297 , 1);
      PrintStep( A_C , 60,  297 , 1);
      PrintStep( R_U , 60,  297 , 1);
      PrintStep( R_T , 60,  297 , 1);
      PrintStep( F_T , 60,  297 , 1);
      PrintStep( CumInfected , 60,  297 , 1);
      PrintStep( CumPosTest , 60,  297 , 1);
      PrintStep( CumDeath , 60,  297 , 1);
      PrintStep( dtCumInfected , 60,  297 , 1);
      PrintStep( dtCumPosTest , 60,  297 , 1);
      PrintStep( dtCumDeath , 60,  297 , 1);
      PrintStep( Tot , 60,  297 , 1);
      PrintStep( ThetaFit , 60,  297 , 1);
      PrintStep( HygieneFit , 60,  297 , 1);
      PrintStep( c , 60,  297 , 1);
      PrintStep( beta , 60,  297 , 1);
      PrintStep( rho , 60,  297 , 1);
      PrintStep( lambda , 60,  297 , 1);
      PrintStep( delta , 60,  297 , 1);
      PrintStep( Rt , 60,  297 , 1);
      PrintStep( Refft , 60,  297 , 1);

    }
  }
}
