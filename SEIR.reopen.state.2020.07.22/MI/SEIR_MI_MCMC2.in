MCMC ("simMCMC.out","",  # name of output and restart file
      "",                     # name of data file
      200000,0,                 # iterations, print predictions flag,
      100,200000,                 # printing frequency, iters to print
      34330995.834277);              # random seed (default)

Integrate (Lsodes, 1e-8, 1e-10, 1);

Level {
  
  Distrib(GM_NInit, TruncLogNormal, 1000, 10, 1, 10000); # Number of index cases
  Distrib(GM_TIsolation, TruncLogNormal, 14, 2, 7, 21); # Isolation time after contact tracing
  Distrib(GM_R0, TruncNormal, 2.9, 0.78, 1.46, 4.5); # Basic reproductive number
  Distrib(GM_c0, TruncNormal, 13, 5, 7, 20); # Average contacts/day
  Distrib(GM_TLatent, TruncNormal, 4, 1, 2, 7); # Latency
  Distrib(GM_TRecover, TruncLogNormal, 10, 1.5, 5, 30); # Time to recovery (no longer infectious)
  Distrib(GM_IFR, TruncLogNormal, 0.01, 2, 0.001, 0.1); # Infected fatality rate
  Distrib(GM_T50Testing, TruncNormal, 120, 60, 60, 180); # Time of 50% of final testing rate
  Distrib(GM_TauTesting, TruncNormal, 21, 14, 1, 42); # Time constant for testing
  Distrib(GM_TTestingRate, TruncNormal, 7, 3, 2, 12);
  Distrib(GM_TContactsTestingRate, TruncNormal, 2, 1, 1, 3); 
  Distrib(GM_FAsymp, TruncNormal, 0.295, 0.275, 0.02, 0.57); # Fraction asymptomatic
  Distrib(GM_TestingCoverage, Beta, 2, 2); # Testing coverage
  Distrib(GM_TestSensitivity, TruncNormal, 0.7, 0.1, 0.6, 0.95);
  Distrib(GM_ThetaMin, TruncNormal, 0.366, 0.222, 0, 1); # Minimum value for social distancing
  Distrib(GM_TauTheta, TruncNormal, 18.4, 2.15, 7, 35); # Characteristic time for social distancing
  Distrib(GM_PwrTheta, TruncNormal, 4.15, 1.1, 1, 11); # Power in Weibull model for social distancing
  Distrib(GM_HygienePwr, Beta, 2, 2); # Power in Weibull model for social distancing
  Distrib(GM_FracTraced, TruncLogNormal, 0.25, 2, 0.05, 1); # Fraction traced
  
  Distrib(GM_TPosTest, TruncLogNormal, 7, 2, 1, 14); # Reporting delay
  Distrib(GM_TFatalDeath, TruncLogNormal, 7, 2, 1, 14); # Time from fatal illness to death + reporting delay
  
  Distrib(GM_TauS, TruncNormal, 33.9, 18.3, 0, 90);
  Distrib(GM_rMax, TruncNormal, 0.669, 0.178, 0, 2);
  Distrib(GM_TauR, TruncNormal, 57.6, 18.2, 0, 105);
  
  Distrib(alpha_Pos, LogUniform, 0.1, 40);
  Distrib(alpha_Death, LogUniform, 0.1, 40);
  
  Level {
    
    Likelihood(Data(N_pos), NegativeBinomial, alpha_Pos, Prediction(p_N_pos));
    Likelihood(Data(D_pos), NegativeBinomial, alpha_Death, Prediction(p_D_pos));

    Simulation { # MI 

      Npop = 9986857 ;
      StartTime(60);

      Print(N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      Data(N_pos, 745 943 804 799 1240 1093 1180 1140 1324 1066 919 1579 1291 1592 1130 1203 1002 877 1327 1179 1100 1032 1076 808 686 1036 911 920 922 865 709 528 937 1095 1116 989 1036 533 526 920 829 950 1017 735 432 357 780 688 634 600 618 383 301 971 1637 817 578 651 336 255 534 764 575 459 465 218 164 175 443 386 336 319 205 247 245 290 279 234 205 93 55 135 63 15 267 223 164 218 31 184 228 301 299 448 166 246 240 358 434 340 350 267 277 505 361 589 497 406 360 328 631 651 512 622 685 406 422 666 1049 926 754 745 530 527 664 671 -1 );
      Print(p_N_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      Print(D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      Data(D_pos, 5 3 10 13 21 29 25 48 53 71 68 86 114 125 125 117 112 120 141 158 151 156 161 164 168 142 141 140 169 143 123 129 111 124 131 109 107 111 107 112 99 88 99 86 59 62 81 59 58 86 62 49 45 58 49 44 46 47 32 39 31 43 44 41 31 26 28 38 25 24 24 27 24 16 25 26 15 17 8 7 11 15 9 1 33 5 23 3 1 17 2 25 6 20 3 7 12 5 19 1 19 5 3 32 5 14 3 3 0 3 30 11 9 14 28 1 7 5 4 18 7 9 2 7 9 6 -1 );
      Print(p_D_pos, 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 );
      PrintStep( S , 60,  295 , 1);
      PrintStep( S_C , 60,  295 , 1);
      PrintStep( E , 60,  295 , 1);
      PrintStep( E_C , 60,  295 , 1);
      PrintStep( I_U , 60,  295 , 1);
      PrintStep( I_C , 60,  295 , 1);
      PrintStep( I_T , 60,  295 , 1);
      PrintStep( R_U , 60,  295 , 1);
      PrintStep( R_T , 60,  295 , 1);
      PrintStep( F_T , 60,  295 , 1);
      PrintStep( CumInfected , 60,  295 , 1);
      PrintStep( CumPosTest , 60,  295 , 1);
      PrintStep( CumDeath , 60,  295 , 1);
      PrintStep( dtCumInfected , 60,  295 , 1);
      PrintStep( dtCumPosTest , 60,  295 , 1);
      PrintStep( dtCumDeath , 60,  295 , 1);
      PrintStep( Tot , 60,  295 , 1);
      PrintStep( ThetaFit , 60,  295 , 1);
      PrintStep( HygieneFit , 60,  295 , 1);
      PrintStep( c , 60,  295 , 1);
      PrintStep( beta , 60,  295 , 1);
      PrintStep( rho , 60,  295 , 1);
      PrintStep( lambda , 60,  295 , 1);
      PrintStep( delta , 60,  295 , 1);
      PrintStep( Rt , 60,  295 , 1);
      PrintStep( Refft , 60,  295 , 1);

    }
  }
}
